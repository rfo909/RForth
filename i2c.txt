
# Trying to do i2c directly via register manipulation. So far no success!
# 
# Added TWI functionality to RForth. Working demo in i2c_op.txt
#
#
# Reason for trying this is for fun and that Wire.h consumes 200+ bytes of SRAM.


#######
### https://electronics.stackexchange.com/questions/309135/i2c-atmega328p-as-master-and-24lc256-as-slave
---------------------------

: TWSR 0xb9 ;
: TWDR 0xbb ;
: TWCR 0xbc ;

: START        0x08 ;
: MS_ACK		0x18 ;       # master start ack
: MD_ACK		0x29 ;       # master data ack

: TWINT b1000_0000 ;
: TWSTA b0010_0000 ;
: TWSTO b0001_0000 ;
: TWEN  b0000_0100 ;

: WBIT 0 ;
: RBIT 1 ;



# (2)(4)(6) Wait for TWINT flag in TWCR
: w millis 5000 + =m
	loop{ millis m > if{ 'w abort } TWCR read TWINT & break } ;
	
	
# (1) send_start
: start!
	TWINT TWEN TWSTA | | 
		TWCR write
	;

# (2) wait for TWINT flag in TWCR
# w


# (3a) Check status register for START ok
: start? TWSR read 0xF8 & START != if{ 'start? abort } ;


# (3b) send device address
    
: addr! =addr
	addr 1 << WBIT | TWDR write 
	TWINT TWEN | TWCR write
	;

# (4) wait for TWINT flag in TWCR
# w


# (5a) Check TWI status register for ACK ok
: addr? TWSR read 0xF8 & MS_ACK != if{ 'addr? abort } ;

# (5b) Send data
: data! =data 
	data TWDR write
	TWINT TWEN | TWCR write
	;

# (6) wait for TWINT flag in TWCR
# w
	
	
# (7a) Check TWI status for DATA_ACK
: data? TWSR read 0xF8 & MD_ACK != if{ 'data? abort } ;

# (7b) Send STOP
: stop! TWINT TWEN TWSTO | | TWCR write ;



# Test
: t1 
  start! w start?
  0x50 addr! w addr?
  # --- EEPROM address
  0 data! w data? 
  0 data! w data?
  # --- write byte
  43 data! w data?    
  stop!
  ;
  
# Wait for EEPROM to be ready
# --
: eewait
	millis 5000 + =m
	loop{ millis m > if{ 'eewait abort } 0x50 twi:tr:begin twi:tr:end 0 == break }
;

# Write 55 into address 0
# --
: t2 
	twi:begin
	eewait
	0x50 twi:tr:begin
	0 twi:write
	0 twi:write
	55 twi:write
	twi:tr:end pop
	twi:end
;

# Read address 0
# --
: t3
	twi:begin
	eewait
	0x50 twi:tr:begin
	0 twi:write
	0 twi:write
	twi:tr:end pop
	0x50 1 twi:request
	twi:read =result
	twi:end
	result
;


