: DDRB 0x24 ;
: PORTB 0x25 ;

: mask =count 1 count << ;
: M 5 mask ;

: init DDRB read M | DDRB write ;
: on init PORTB read M | PORTB write ;
: off PORTB read M ! & PORTB write ;


: wait =ms millis ms + =ms loop{ millis ms > break  } ;

: blink loop{ on 1000 wait off 500 wait } ;

	# Finally the blink implementation!

# Testing speed
# --

0 =a loop{ a 1 + =a a 100 > break } ;

# 9 ms #op=1112

# Count iterations over 10 millis
# About 100 or 10 per millisecond, and given that the code is about 10 op's,
# we get 100 op's per millisecond, as the test above returned.
# --
millis 3 + =start 
millis 13 + =stop
loop{ millis start > break }
0 =count
loop{ count 1 + =count millis stop > break }
count ;

# -------------
# Alternative
# -------------

# Modify register - change one or more bits at a time

: SetReg =addr =clearMask =valueMask
	addr read clearMask ! &
		valueMask | addr write ;


