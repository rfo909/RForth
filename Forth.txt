
Dict EEPROM
EEPROM DictUse

32 CONSTANT BufSize
  
0x50 CONSTANT deviceAddr

800 CONSTANT BufCount
  (with room for dumping HEAP)

HERE BufSize 3 add allot CONSTANT Block 
  (1 length byte 2 eeprom write address bytes)

: Len Block readb ;
: Out (byte --) 
  (byte) Block Len add 1+ writeb 
  Len 1+ Block writeb (update length) ;
  
: Out2 (val--) 
  dup (val) 8 >> 0xFF andb Out 
  (val) 0xFF andb Out ;

: Clr 
  0 Block writeb ;
  
: >eeAddr (blockNo) 
  BufSize mul Out2 ;
  
: >Next (blockNo) 
  1 sub Out2 ;
  
: >Flags ()
  0 Out (flags) ;
  
: >Spaces ()
  BufSize 3 sub => i 
  BEGIN 0x20 Out 
    i 1 sub => i
  i AGAIN? ;

: InitBlock (blockNo) 
  Clr 
  dup (blockNo) >eeAddr
  (blockNo) >Next
  >Flags 
  >Spaces ;

: i2cWrite
  (write Block data to i2c device)
  Block 1+
    Len
    deviceAddr NATIVE I2C.MasterWrite 
  deviceAddr NATIVE I2C.MasterWWait
  ;
  
: InitAll (--) 
  1 => i BEGIN 
    cr i print#
    i InitBlock i2cWrite 
    i 1+ => i 
    i BufCount lt AGAIN? ;

: Show (-- show Block data --)
  Block readb => count
  0 => i BEGIN
     cr i print#
     "_:_ .str
     Block 1+ i add readb print
     i 1+ => i
     i count lt AGAIN?
  ;
    
: i2cRead (blockNo)
  (send address)
  Clr (blockNo) >eeAddr i2cWrite
  cr Show cr
  (read data)
  Clr BufSize 
    Block 1+ 
    deviceAddr NATIVE I2C.MasterRead => recv
  recv Block writeb (update length)
  ;
 

