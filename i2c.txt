
# Trying to do i2c directly via register manipulation. So far no success!
# 
# Added TWI functionality to RForth. Working demo in i2c_op.txt
#
#
# Reason for trying this is for fun and that Wire.h consumes 200+ bytes of SRAM.



#######
### https://electronics.stackexchange.com/questions/309135/i2c-atmega328p-as-master-and-24lc256-as-slave
---------------------------

const FOSC	16000000
const KHZ   100

const TWBR 0xb8 ;
const TWSR 0xb9 ;
#const TWAR 0xba ;
const TWDR 0xbb ;
const TWCR 0xbc ;
#const TWAMR 0xbd ;
const START        0x08 ;

const ACKNACK   0x18 ;


# set_clock
: clk! 
	b0000_0100 # TWEN
		TWCR sys:write
	b0000_0001 =m # TWPS0 - prescaler 4
		TWSR sys:read m | TWSR sys:write
	FOSC KHZ / 16 - 8 / TWBR sys:write
	;
	
# send_start
: start
	b1010_0100 # TWINT TWEN TWSTA  # send start
		TWCR sys:write
	loop{ TWCR sys:read B1000_0000 & break }
	;

# send stop
: stop
	b1001_0100 # TWINT TWEN TWSTO
		TWCR sys:write
	loop{ TWCR sys:read B1000_0000 & break }
	;


# check_start_status
: Rdy! TWSR sys:read 0xf8 & START != if{ 40 sys:neg sys:abort } ;

# send_address
: addr! =addr
	addr TWDR sys:write
	b1000_0100  # TWINT TWEN
		TWCR sys:write
	loop{ TWCR sys:read B1000_0000 & break }
	;

# check_MT_slave_ack
: ack! TWSR sys:read 0xf8 & ACKNACK != if{ 50 sys:neg sys:abort } ;

# check MT_slave_nack
#: nack! TWSR sys:read 0xf8 & ACKNACK != if{ 60 sys:neg sys:abort } ;

# transmit_data
: data! =data
	data TWDR sys:write
	b1000_0100 # TWINT TWEN
		TWCR sys:write
	loop{ TWCR sys:read B1000_0000 & break }
	;

# main
: main 
	100 clk!
	start
	Rdy!
	0x50 addr!
	ack!
	0x00 data!
	ack!
	stop
;

