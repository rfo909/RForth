Development log
---------------
NEWEST FIRST


2022-05-20
----------

Did some heap memory use reduction, by letting ERR* and WARN* take a code which 
is ran through a switch doing Serial.println() with F(...) strings, using PROGMEM
instead of the heap. Saved some 280 bytes this way. 

2022-05-19 v0.1.2
-----------------

Adding EEPROM support, as we have 1Kb of permanent storage there. Will change
the storage model into a sequence of string + code + string + code, as each
is terminated by a single 0-byte.

Added types and extended stack to contain long values (4 bytes). Changed default 
type from int to long.

Added internal function millis for simple timing.

2022-05-19
----------

Fixed bug that prevented redef. of word.

Optimization: created lget[0-3] and lset[0-3] and using PUSH + lset / lget for
local variables beyond the first 4. This results in smaller code, which is good when
every byte of ram counts.

Created interactive commands stats and dis:xxx plus help.

Changed memory allocations for persistent string and code depending on whether
disassembler is enabled or not, as enabling it costs about 200 bytes of string 
constants on the heap.

2022-05-18 v0.1.1 Data Stack value types
----------------------------------------
Added support for types on stack. Keeping current functions
dsPush() dsPeek() dsPop() dsGet() but added checks so they can
only work on numeric data.

The WORD type is for word literals (to be introduced)

Fixed bug: names of local variables were not reset along with other Input resets

Modified OP_DUP to call func in Stacks which handles the new struct type values
on data stack.


2022-05-17 v0.1 



